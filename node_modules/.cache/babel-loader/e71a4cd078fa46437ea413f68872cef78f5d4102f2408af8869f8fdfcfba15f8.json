{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Visual Studio\\\\REACT\\\\PROYECTO REACT\\\\template\\\\src\\\\pages\\\\Character.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/CardsCharacters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Character = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const getDataApi = async () => {\n    const response = await axios.get(`https://rickandmortyapi.com/api/character`);\n    setCharacters(response.data.results);\n    //console.log(response.data.results);\n  };\n\n  const renderCharacters = () => {\n    return filteredCharacters.map((character, i) => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/character`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          item: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this));\n  };\n  useEffect(() => {\n    getDataApi();\n  }, []);\n\n  /*useEffect ( () => {\r\n  setFilteredCharacters(\r\n      characters.filter((character) => character.name.includes(name))\r\n  )\r\n  }, [characters,name]);\r\n  return(\r\n  <div>\r\n    <h1>Rick&Morty</h1>\r\n    <input\r\n    type=\"text\"\r\n    value={name}\r\n    onChange={(e) => setName(e.target.value)}\r\n  />\r\n  {characters.map((character, i) => (\r\n    <div key={i}>\r\n      <p>{character.name}</p>\r\n      <img src={character.image} alt={character.name} />\r\n    </div>\r\n  ))}\r\n  {renderCharacters()}\r\n  </div>\r\n  );\r\n  };*/\n};\n_s(Character, \"M7PJIvTyLrkrL1Jle+POpnZtHqU=\");\n_c = Character;\nexport default Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["axios","useEffect","useState","Link","Card","jsxDEV","_jsxDEV","Character","_s","characters","setCharacters","filteredCharacters","setFilteredCharacters","name","setName","getDataApi","response","get","data","results","renderCharacters","map","character","i","children","fileName","_jsxFileName","lineNumber","columnNumber","to","item","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Visual Studio/REACT/PROYECTO REACT/template/src/pages/Character.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../components/CardsCharacters\";\r\n\r\nconst Character = () => {\r\n\r\n      const[characters, setCharacters] = useState([]);\r\n      const [filteredCharacters, setFilteredCharacters] = useState([])\r\n      const[name, setName] = useState(\"\");\r\n  \r\n      const getDataApi = async () => {\r\n\r\n          const response = await axios.get(\r\n              `https://rickandmortyapi.com/api/character`);\r\n\r\n              setCharacters(response.data.results);\r\n              //console.log(response.data.results);\r\n          };\r\n\r\n      const renderCharacters = () => {\r\n\r\n        return filteredCharacters.map((character, i) => (\r\n        <article key={i}>\r\n          <h4>{character.name}</h4>\r\n          <Link to={`/character`}>\r\n            <Card item={character} />\r\n          </Link>\r\n        </article>\r\n      ));\r\n      };\r\n\r\n      useEffect(() => {\r\n        getDataApi();\r\n    },[]);\r\n\r\n      /*useEffect ( () => {\r\n      setFilteredCharacters(\r\n          characters.filter((character) => character.name.includes(name))\r\n      )\r\n}, [characters,name]);\r\n\r\n\r\n\r\nreturn(\r\n  <div>\r\n        <h1>Rick&Morty</h1>\r\n        <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      {characters.map((character, i) => (\r\n        <div key={i}>\r\n          <p>{character.name}</p>\r\n          <img src={character.image} alt={character.name} />\r\n        </div>\r\n      ))}\r\n      {renderCharacters()}\r\n    </div>\r\n  );\r\n};*/\r\n}\r\nexport default Character"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAK,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAE3B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAC3B,2CAA0C,CAAC;IAE5CP,aAAa,CAACM,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;IACpC;EACJ,CAAC;;EAEL,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAE7B,OAAOT,kBAAkB,CAACU,GAAG,CAAC,CAACC,SAAS,EAAEC,CAAC,kBAC3CjB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAKF,SAAS,CAACT;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBtB,OAAA,CAACH,IAAI;QAAC0B,EAAE,EAAG,YAAY;QAAAL,QAAA,eACrBlB,OAAA,CAACF,IAAI;UAAC0B,IAAI,EAAER;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA,GAJKL,CAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACV,CAAC;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EAChB,CAAC,EAAC,EAAE,CAAC;;EAEH;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAC;AAAAP,EAAA,CAzDKD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA0Df,eAAeA,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}