{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Visual Studio\\\\REACT\\\\PROYECTO REACT\\\\template\\\\src\\\\pages\\\\Character.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Character = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const getDataApi = async () => {\n    const response = await axios.get( /*`https://swapi.dev/api/people/`);*/\n    `https://rickandmortyapi.com/api/character/?page=2\"`);\n    setCharacters(response.data.results);\n    //console.log(response.data.results);\n  };\n\n  const renderCharacters = () => {\n    return filteredCharacters.map((character, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rick&Morty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), characters.map((character, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: character.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)), renderCharacters()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this));\n  };\n  useEffect(() => {\n    getDataApi();\n  }, [characters]);\n  useEffect(() => {\n    setFilteredCharacters(characters.filter(character => character.name.includes(name)));\n  }, [characters, name]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: '/character/' + character.name,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        item: character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Character, \"uC8RXgdLBsvSUaJK0ko1PuoIF2Q=\");\n_c = Character;\nexport default Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["axios","useEffect","useState","Link","Card","jsxDEV","_jsxDEV","Character","_s","characters","setCharacters","filteredCharacters","setFilteredCharacters","name","setName","getDataApi","response","get","data","results","renderCharacters","map","character","i","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","status","src","image","alt","filter","includes","to","item","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Visual Studio/REACT/PROYECTO REACT/template/src/pages/Character.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../components/Card\";\r\nimport '../styles/App.css'\r\n\r\nconst Character = () => {\r\n\r\n      const[characters, setCharacters] = useState([]);\r\n      const [filteredCharacters, setFilteredCharacters] = useState([]);\r\n      const[name, setName] = useState(\"\");\r\n  \r\n      const getDataApi = async () => {\r\n\r\n          const response = await axios.get(\r\n            /*`https://swapi.dev/api/people/`);*/\r\n              `https://rickandmortyapi.com/api/character/?page=2\"`);\r\n\r\n              setCharacters(response.data.results)\r\n              //console.log(response.data.results);\r\n          };\r\n\r\n      const renderCharacters = () => {\r\n\r\n        return filteredCharacters.map((character, i) => (\r\n          <div>\r\n          <h1>Rick&Morty</h1>\r\n            <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {characters.map((character, i) => (\r\n            <div key={i}>\r\n              <h2>{character.name}</h2>\r\n              <h4>{character.status}</h4>\r\n              <img src={character.image} alt={character.name} />\r\n            </div>\r\n          ))}\r\n          {renderCharacters()}\r\n        </div>\r\n        )\r\n        );\r\n      };\r\n\r\n      useEffect(() => {\r\n        getDataApi();\r\n    },[characters]);\r\n\r\n  useEffect ( () => {\r\n      setFilteredCharacters(\r\n          characters.filter((character) => character.name.includes(name))\r\n      )\r\n}, [characters,name]);\r\n\r\nreturn(\r\n    <article key={i}>\r\n    <Link to={'/character/' + character.name}>\r\n      <Card item={character}/>\r\n    </Link>\r\n  </article>)\r\n};\r\n\r\n      \r\nexport default Character\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}