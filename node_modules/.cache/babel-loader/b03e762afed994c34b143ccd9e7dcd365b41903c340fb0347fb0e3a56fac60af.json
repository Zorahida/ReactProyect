{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Visual Studio\\\\REACT\\\\PROYECTO REACT\\\\template\\\\src\\\\pages\\\\Episode.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport CardEpisodes from \"../components/CardEpisodes\";\nimport { Link } from \"react-router-dom\";\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Episode() {\n  _s();\n  const [listEpisodes, setListEpisodes] = useState([]);\n  const [episodeFilter, setEpisodeFilter] = useState(\"\");\n  const getAllEpisodes = async () => {\n    const response = await axios.get(`https://rickandmortyapi.com/api/episode/?page=id`);\n    const chapter = response.data.results.slice(0, 5);\n    setListEpisodes(chapter);\n    //console.log(response.data.results);\n  };\n\n  useEffect(() => {\n    getAllEpisodes();\n  }, []);\n  const renderEpisodes = () => {\n    return listEpisodes.map((episode, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"episodeList\",\n        children: [\"Episode number: \", episode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: episode.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: episode.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: episode.air_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: episode.episode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/episode`,\n        children: /*#__PURE__*/_jsxDEV(CardEpisodes, {\n          item: episode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this));\n  };\n  const handleFilterChange = e => {\n    setEpisodeFilter(e.target.value);\n  };\n  const filteredEpisodes = listEpisodes.filter(episode => episode.name.includes(episodeFilter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ricky&Morty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"Text\",\n      value: episodeFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), filteredEpisodes.length > 0 ? renderEpisodes() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Episode, \"yoXBroF7U9awSQ6kwOT3lKsfjK8=\");\n_c = Episode;\n;\nexport default Episode;\nvar _c;\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"names":["axios","useState","useEffect","CardEpisodes","Link","jsxDEV","_jsxDEV","Episode","_s","listEpisodes","setListEpisodes","episodeFilter","setEpisodeFilter","getAllEpisodes","response","get","chapter","data","results","slice","renderEpisodes","map","episode","i","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","name","url","air_date","to","item","handleFilterChange","e","target","value","filteredEpisodes","filter","includes","type","onChange","length","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Visual Studio/REACT/PROYECTO REACT/template/src/pages/Episode.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CardEpisodes from \"../components/CardEpisodes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/App.css'\r\n\r\nfunction Episode() {\r\n\r\n    const[listEpisodes, setListEpisodes] = useState([]);\r\n    const[episodeFilter, setEpisodeFilter] = useState(\"\");\r\n\r\n    const getAllEpisodes = async () => {\r\n\r\n    const response = await axios.get(\r\n            `https://rickandmortyapi.com/api/episode/?page=id`);\r\n\r\n    const chapter = response.data.results.slice(0, 5)\r\n        setListEpisodes(chapter);\r\n            //console.log(response.data.results);\r\n        };\r\n\r\n        useEffect(() => {\r\n            getAllEpisodes();\r\n        }, []);\r\n\r\n    const renderEpisodes = () => {\r\n        return listEpisodes.map((episode, i) => (\r\n           <div key= {i}>\r\n             <h4 className=\"episodeList\">Episode number: {episode.id}</h4>\r\n             <ul>\r\n             <li>{episode.name}</li>\r\n             <li>{episode.url}</li>\r\n             <li>{episode.air_date}</li>\r\n             <li>{episode.episode}</li>\r\n            </ul>\r\n            \r\n            <Link to={`/episode`}>\r\n            <CardEpisodes item={episode} />\r\n          </Link>\r\n        </div>\r\n        ));\r\n    };\r\n\r\n\r\n    const handleFilterChange = (e) => {\r\n        setEpisodeFilter(e.target.value);\r\n    };\r\n\r\n    const filteredEpisodes = listEpisodes.filter((episode)=>\r\n   episode.name.includes(episodeFilter) \r\n   );\r\n\r\n   return (\r\n    <div>\r\n        <h2>Ricky&Morty</h2>\r\n        <input\r\n        type=\"Text\"\r\n        value={episodeFilter}\r\n        onChange={handleFilterChange} />\r\n        {filteredEpisodes.length > 0 ? (renderEpisodes() ) : (<p>Error</p>)}\r\n    </div>\r\n   );\r\n};\r\n\r\nexport default Episode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}