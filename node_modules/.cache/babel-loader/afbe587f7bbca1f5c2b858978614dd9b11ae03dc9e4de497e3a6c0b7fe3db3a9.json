{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Visual Studio\\\\REACT\\\\PROYECTO REACT\\\\template\\\\src\\\\pages\\\\Episode.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport CardEpisodes from \"../components/CardEpisodes\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Episode() {\n  _s();\n  const episodes = Context(userContext);\n  const [listEpisodes, setListEpisodes] = useState([]);\n  const [episodeFilter, setEpisodeFilter] = useState(\"\");\n  const getAllEpisodes = async () => {\n    const response = await axios.get(`https://rickandmortyapi.com/api/episode/?page=id`);\n    setListEpisodes(response.data.results);\n    //console.log(response.data.results);\n  };\n\n  useEffect(() => {\n    getAllEpisodes();\n  }, []);\n  const renderEpisodes = () => {\n    return listEpisodes.map((episode, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Episode number: \", episode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: episode.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: episode.characters,\n        alt: episode.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/episode`,\n        children: /*#__PURE__*/_jsxDEV(CardEpisodes, {\n          item: episode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this));\n  };\n  const handleFilterChange = e => {\n    setEpisodeFilter(e.target.value);\n  };\n  const filteredEpisodes = listEpisodes.filter(episode => episode.name.includes(episodeFilter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ricky&Morty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: episodeFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), filteredEpisodes.length > 0 ? renderEpisodes() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Episode, \"yoXBroF7U9awSQ6kwOT3lKsfjK8=\");\n_c = Episode;\n;\nexport default Episode;\nvar _c;\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"names":["axios","useState","useEffect","useContext","createContext","CardEpisodes","Link","jsxDEV","_jsxDEV","Episode","_s","episodes","Context","userContext","listEpisodes","setListEpisodes","episodeFilter","setEpisodeFilter","getAllEpisodes","response","get","data","results","renderEpisodes","map","episode","i","children","id","fileName","_jsxFileName","lineNumber","columnNumber","url","src","characters","alt","name","to","item","handleFilterChange","e","target","value","filteredEpisodes","filter","includes","type","onChange","length","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Visual Studio/REACT/PROYECTO REACT/template/src/pages/Episode.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect, useContext, createContext } from \"react\";\r\nimport CardEpisodes from \"../components/CardEpisodes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Episode() {\r\n\r\n    const episodes = Context(userContext)\r\n\r\n    const[listEpisodes, setListEpisodes] = useState([]);\r\n    const[episodeFilter, setEpisodeFilter] = useState(\"\");\r\n\r\n    const getAllEpisodes = async () => {\r\n\r\n    const response = await axios.get(\r\n            `https://rickandmortyapi.com/api/episode/?page=id`);\r\n\r\n        setListEpisodes(response.data.results);\r\n            //console.log(response.data.results);\r\n        };\r\n\r\n        useEffect(() => {\r\n            getAllEpisodes();\r\n        }, []);\r\n\r\n    const renderEpisodes = () => {\r\n        return listEpisodes.map((episode, i) => (\r\n           <div key= {i}>\r\n             <h4>Episode number: {episode.id}</h4>\r\n             <p>{episode.url}</p>\r\n            <img src={episode.characters} alt={episode.name} />\r\n            <Link to={`/episode`}>\r\n            <CardEpisodes item={episode} />\r\n          </Link>\r\n        </div>\r\n        ));\r\n    };\r\n\r\n\r\n    const handleFilterChange = (e) => {\r\n        setEpisodeFilter(e.target.value);\r\n    };\r\n\r\n    const filteredEpisodes = listEpisodes.filter((episode)=>\r\n   episode.name.includes(episodeFilter) \r\n   );\r\n\r\n   return (\r\n    <div>\r\n        <h2>Ricky&Morty</h2>\r\n        <input\r\n        type=\"text\"\r\n        value={episodeFilter}\r\n        onChange={handleFilterChange} />\r\n        {filteredEpisodes.length > 0 ? (renderEpisodes() ) : (<p>Error</p>)}\r\n    </div>\r\n   );\r\n};\r\n\r\nexport default Episode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}