{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Visual Studio\\\\REACT\\\\PROYECTO REACT\\\\template\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport Button from './Button';\n\n//Hay que haver un POST con una DB y el prevstate es []\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prevState = {\n  email: \"\",\n  password: \"\"\n};\nconst Login = _ref => {\n  _s();\n  let {\n    LoginUser,\n    logError\n  } = _ref;\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  const [form, setForm] = useState(prevState);\n  const dataUser = ev => {\n    const {\n      value,\n      name\n    } = ev.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const submitForm = ev => {\n    ev.preventDefault();\n    LoginUser(form, state ? state.prevRoute : null);\n    setForm(prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        name: \"name\",\n        onChange: dataUser,\n        value: form.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"surname\",\n      children: [\"Surname\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"surname\",\n        name: \"surname\",\n        onChange: dataUser,\n        value: form.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: dataUser,\n        value: form.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pass\",\n      children: [\"Contrase\\xF1a\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"pass\",\n        onChange: dataUser,\n        value: form.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: '/Login',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          item: Button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button\",\n          type: \"submit\",\n          children: \"Register!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), logError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'pink'\n      },\n      children: [logError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n_s(Login, \"XVA8QFCpMtC7gNr6EhoBz39fv/I=\", false, function () {\n  return [useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useLocation","useState","Button","jsxDEV","_jsxDEV","prevState","email","password","Login","_ref","_s","LoginUser","logError","location","state","form","setForm","dataUser","ev","value","name","target","submitForm","preventDefault","prevRoute","onSubmit","children","htmlFor","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","surname","id","to","item","className","style","color","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Visual Studio/REACT/PROYECTO REACT/template/src/components/Login.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport Button from './Button'\r\n\r\n//Hay que haver un POST con una DB y el prevstate es []\r\nconst prevState = {\r\n    email: \"\",\r\n    password:\"\"\r\n}\r\n const Login = ({ LoginUser, logError}) => {\r\n    const location = useLocation()\r\n    const { state } = location\r\n \r\nconst [form, setForm] = useState(prevState)\r\n \r\n    const dataUser = (ev) => {\r\n        const { value, name } = ev.target;\r\n\r\n        setForm({...form, [name]: value })\r\n    }\r\n    \r\n    const submitForm = (ev) => {\r\n        ev.preventDefault();\r\n        LoginUser(form, state ? state.prevRoute: null)\r\n        setForm(prevState);\r\n    }\r\n    \r\n    return (<form onSubmit={submitForm}>\r\n      <label htmlFor=\"name\">\r\n            Name\r\n            <input type=\"name\" name=\"name\" onChange={dataUser} value={form.name} />\r\n        </label>\r\n        <label htmlFor=\"surname\">\r\n            Surname\r\n            <input type=\"surname\" name=\"surname\" onChange={dataUser} value={form.surname} />\r\n        </label>\r\n\r\n        <label htmlFor=\"email\">\r\n            Email\r\n            <input type=\"email\" name=\"email\" onChange={dataUser} value={form.email} />\r\n        </label>\r\n        <label htmlFor=\"pass\">\r\n            Contrase√±a\r\n            <input type=\"password\" name=\"password\" id=\"pass\" onChange={dataUser}\r\n                value={form.password} />\r\n        </label>\r\n        <div>\r\n        <Link to={'/Login'}>\r\n        <Button item ={Button}/>\r\n            <button className='Button' type=\"submit\">Register!</button>\r\n        </Link>\r\n        </div>\r\n\r\n        {logError ? <div style={{ color: 'pink' }}>{logError} </div> : null}\r\n    </form>)\r\n    \r\n    }\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}